[project]
authors = [
    { name = "PabloLec", email = "pablolec@pm.me" },
]
license = { text = "GPL-3.0 License" }
requires-python = "<4.0.0,>=3.8.1"
dependencies = [
    "textual==2.1.2",
]
name = "recoverpy"
version = "2.2.0"
description = "A TUI to recover overwritten or deleted data."
readme = "README.md"
keywords = [
    "data",
    "recovery",
    "search",
    "cli",
    "console",
    "cui",
    "tui",
    "ncurses",
    "terminal",
    "cybersec",
    "cybersecurity",
    "security",
    "pentesting",
    "pentest",
    "forensics",
    "forensic",
    "hack",
    "hacking",
    "data recovery",
    "data recovery tool",
    "grep",
    "linux",
    "unix",
    "education",
    "teaching",
    "training",
    "teach",
    "learn",
    "textual",
    "asyncio",
    "async",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: System :: Filesystems",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Recovery Tools",
    "Topic :: System :: Shells",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
    "Topic :: Utilities",
    "Typing :: Typed",
    "Framework :: AsyncIO",
]

[project.urls]
homepage = "https://github.com/PabloLec/recoverpy"
repository = "https://github.com/PabloLec/recoverpy"
documentation = "https://github.com/PabloLec/recoverpy#readme"

[project.scripts]
recoverpy = "recoverpy.__init__:main"

[dependency-groups]
dev = [
    "isort>=5.13.2",
    "pyright>=1.1.392.post0",
    "pytest-asyncio>=0.24.0",
    "pytest>=8.3.4",
    "ruff>=0.9.3",
    "pytest-mock>=3.14.0",
    "pytest-cov>=5.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.pyright]
include = ["recoverpy"]
exclude = ["recoverpy/ui/widgets/directory_tree.py"]
typeCheckingMode = "strict"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"

[tool.pytest.ini_options]
markers = [
    "incremental",
]
asyncio_default_fixture_loop_scope = "function"